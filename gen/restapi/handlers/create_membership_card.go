// Code generated by go-swagger; DO NOT EDIT.

package handlers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"bytes"
	"context"
	"encoding/json"
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateMembershipCardHandlerFunc turns a function with the right signature into a create membership card handler
type CreateMembershipCardHandlerFunc func(CreateMembershipCardParams) middleware.Responder

// Handle executing the request and returning a response
func (fn CreateMembershipCardHandlerFunc) Handle(params CreateMembershipCardParams) middleware.Responder {
	return fn(params)
}

// CreateMembershipCardHandler interface for that can handle valid create membership card params
type CreateMembershipCardHandler interface {
	Handle(CreateMembershipCardParams) middleware.Responder
}

// NewCreateMembershipCard creates a new http.Handler for the create membership card operation
func NewCreateMembershipCard(ctx *middleware.Context, handler CreateMembershipCardHandler) *CreateMembershipCard {
	return &CreateMembershipCard{Context: ctx, Handler: handler}
}

/* CreateMembershipCard swagger:route POST /card createMembershipCard

会員証を新規に発行するAPI

*/
type CreateMembershipCard struct {
	Context *middleware.Context
	Handler CreateMembershipCardHandler
}

func (o *CreateMembershipCard) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewCreateMembershipCardParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// CreateMembershipCardBody create membership card body
//
// swagger:model CreateMembershipCardBody
type CreateMembershipCardBody struct {

	// company Id
	// Required: true
	CompanyID *string `json:"companyId"`
}

// UnmarshalJSON unmarshals this object while disallowing additional properties from JSON
func (o *CreateMembershipCardBody) UnmarshalJSON(data []byte) error {
	var props struct {

		// company Id
		// Required: true
		CompanyID *string `json:"companyId"`
	}

	dec := json.NewDecoder(bytes.NewReader(data))
	dec.DisallowUnknownFields()
	if err := dec.Decode(&props); err != nil {
		return err
	}

	o.CompanyID = props.CompanyID
	return nil
}

// Validate validates this create membership card body
func (o *CreateMembershipCardBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCompanyID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateMembershipCardBody) validateCompanyID(formats strfmt.Registry) error {

	if err := validate.Required("RegisterMemberRequest"+"."+"companyId", "body", o.CompanyID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this create membership card body based on context it is used
func (o *CreateMembershipCardBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateMembershipCardBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateMembershipCardBody) UnmarshalBinary(b []byte) error {
	var res CreateMembershipCardBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
